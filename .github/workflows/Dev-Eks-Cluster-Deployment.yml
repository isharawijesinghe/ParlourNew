name: "Dev-Eks-Cluster-Deployment"

on:
  workflow_dispatch: {}

jobs:
  terraform:
    name:   ${{matrix.runner}} - ${{ matrix.environment }}
    runs-on: [ '${{ matrix.runner }}']
    strategy:
      max-parallel: 1
      matrix:
        include:
          - environment: dev
            runner: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS__KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          tf_actions_working_dir: Deployment/DevEnvironment/EKS/Terraform
      - name: Terraform Init
        id: init
        run: |
          rm -rf Deployment/DevEnvironment/EKS/Terraform/.terraform
          terraform init -upgrade=true -no-color -input=false
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false -chdir=Deployment/DevEnvironment/EKS/Terraform -no-color
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        id: apply
        run: terraform apply -auto-approve -input=false -chdir=Deployment/DevEnvironment/EKS/Terraform
      - name: Terraform destroy
        if: github.ref == 'refs/heads/destroy'
        id: destroy
        run: terraform destroy -auto-approve -input=false -chdir=Deployment/DevEnvironment/EKS/Terraform
  comment:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })